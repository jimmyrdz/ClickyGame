{"version":3,"sources":["components/GridMDC/GridMDC.js","components/PaperMDC/PaperMDC.js","components/CharCard/CharCard.js","components/Score/Score.js","components/Alert/Alert.js","components/NavBar/NavBar.js","components/BottomNavMDC/BottomNavMDC.js","App.js","registerServiceWorker.js","index.js"],"names":["GridMDC","props","react_default","a","createElement","Grid","children","PaperMDC","Paper","CharCard","_ref","id","name","image","handlePicked","className","key","data-id","style","backgroundImage","concat","onClick","Score","type","score","Alert","message","NavBar","AppBar","Object","assign","position","Toolbar","Typography","variant","color","align","BottomNavMDC","BottomNavigation","App","state","coins","pickedChars","topScore","alertMessage","event","target","attributes","getNamedItem","value","_this","shufflecoins","checkGuess","updateTopScore","setState","shuffleArray","j","x","i","length","Math","floor","random","cb","newState","objectSpread","includes","toUpperCase","push","alertWinner","_this2","this","components_NavBar_NavBar","background","marginBottom","components_GridMDC_GridMDC","container","direction","margin","maxWidth","item","lg","components_PaperMDC_PaperMDC","components_Alert_Alert","justify","md","sm","xs","components_Score_Score","spacing","map","char","components_CharCard_CharCard","components_BottomNavMDC_BottomNavMDC","marginTop","paddingTop","borderTop","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e9e5f02b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst GridMDC = props =>\r\n    <Grid {...props}>\r\n        {props.children}\r\n    </Grid>\r\n\r\nexport default GridMDC;","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst PaperMDC = props => (\r\n    <Paper>\r\n        {props.children}\r\n    </Paper>\r\n)\r\n\r\nexport default PaperMDC;","import React from \"react\";\r\nimport \"./CharCard.css\";\r\n// import { url } from \"inspector\";\r\n\r\nconst CharCard = ({ id, name, image, handlePicked }) => (\r\n    // <div className={`mdc-layout-grid__cell--span-3--order-${Number(id)}`}>\r\n    <div>\r\n        <div\r\n            className=\"card\"\r\n            key={id}\r\n            data-id={id}\r\n            name={name}\r\n            style={{ backgroundImage: `url(${image})` }}\r\n            onClick={handlePicked}\r\n        >\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default CharCard;\r\n","import React from \"react\";\r\nimport \"./Score.css\";\r\n\r\nconst Score = props => (\r\n    <div className=\"score\">\r\n        {props.type}: {props.score}\r\n    </div>\r\n)\r\n\r\nexport default Score;","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = props => (\r\n    <div className=\"default\" style={props.style}>\r\n        {props.message ? (\r\n            <p>{props.message}</p>\r\n        ) : (\r\n                <p className=\"default-msg black\">Click an image to begin!</p>\r\n            )}\r\n    </div>\r\n)\r\n\r\nexport default Alert;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst NavBar = props => {\r\n    return(\r\n        <div>\r\n        <AppBar position=\"static\" {...props}>\r\n            <Toolbar>\r\n                <Typography variant=\"headline\" color=\"inherit\" align=\"center\">\r\n                Clicky Game\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React from \"react\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport \"./BottomNavMDC.css\"\r\n\r\nconst BottomNavMDC = props => (\r\n    <BottomNavigation {...props}>\r\n        {props.children}\r\n    </BottomNavigation>\r\n)\r\n\r\nexport default BottomNavMDC;","import React, { Component } from 'react';\r\nimport GridMDC from \"./components/GridMDC\";\r\nimport PaperMDC from \"./components/PaperMDC\";\r\nimport CharCard from \"./components/CharCard\";\r\nimport Score from \"./components/Score\";\r\nimport Alert from \"./components/Alert\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport BottomNavMDC from \"./components/BottomNavMDC\";\r\nimport coins from \"./coins.json\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    coins: coins,\r\n    pickedChars: [],\r\n    topScore: 0,\r\n    alertMessage: \"\"\r\n  }\r\n\r\n  handlePicked = event => {\r\n\r\n    const name = event.target.attributes.getNamedItem(\"name\").value;\r\n    this.shufflecoins()\r\n    this.checkGuess(name, this.updateTopScore)\r\n  }\r\n\r\n  shufflecoins = () => {\r\n    this.setState(this.state.coins = this.shuffleArray(this.state.coins))\r\n  }\r\n\r\n  shuffleArray = (a) => {\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n      j = Math.floor(Math.random() * (i + 1));\r\n      x = a[i];\r\n      a[i] = a[j];\r\n      a[j] = x;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  checkGuess = (name, cb) => {\r\n    const newState = { ...this.state };\r\n    if (newState.pickedChars.includes(name)) {\r\n      newState.alertMessage = `YOU ALREADY PICKED \"${name.toUpperCase()}\"!`\r\n      newState.pickedChars = []\r\n      this.setState(this.state = newState)\r\n    } else {\r\n      newState.pickedChars.push(name)\r\n      newState.alertMessage = `GOOD CHOICE!`\r\n      this.setState(this.state = newState)\r\n    }\r\n    cb(newState, this.alertWinner)\r\n  }\r\n\r\n  updateTopScore = (newState, cb) => {\r\n    if (newState.pickedChars.length > newState.topScore) {\r\n      newState.topScore++\r\n      this.setState(this.state = newState)\r\n    }\r\n    cb(newState)\r\n  }\r\n\r\n  alertWinner = (newState) => {\r\n    if (newState.pickedChars.length === 12) {\r\n      newState.alertMessage = \"CHAMPION!\";\r\n      newState.pickedChars = [];\r\n      this.setState(this.state = newState)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar style={{ background: \"#313133\", marginBottom: \"5px\" }} />\r\n\r\n        <GridMDC container direction=\"column\" style={{ margin: \"0 auto\", maxWidth: 945 }}>\r\n\r\n          <GridMDC item lg={12}>\r\n            <PaperMDC>\r\n              {this.state.alertMessage === \"GOOD CHOICE!\" ? (\r\n                <Alert message={this.state.alertMessage} style={{ color: \"green\" }} />\r\n              ) : (\r\n                  <Alert message={this.state.alertMessage} style={{ color: \"red\" }} />\r\n                )}\r\n            </PaperMDC>\r\n          </GridMDC>\r\n\r\n          <GridMDC container justify=\"space-between\">\r\n\r\n            <GridMDC item lg={6} md={6} sm={12} xs={12}>\r\n              <PaperMDC>\r\n                <Score type=\"Score\" score={this.state.pickedChars.length} />\r\n              </PaperMDC>\r\n            </GridMDC>\r\n\r\n            <GridMDC item lg={6} md={6} sm={12} xs={12}>\r\n              <PaperMDC>\r\n                <Score type=\"Top Score\" score={this.state.topScore} />\r\n              </PaperMDC>\r\n            </GridMDC>\r\n\r\n          </GridMDC>\r\n\r\n        </GridMDC>\r\n\r\n        <GridMDC container spacing={24} justify=\"center\" style={{ maxWidth: 945, margin: \"0 auto\" }}>\r\n          {this.state.coins.map(char => (\r\n            <GridMDC item lg={3} md={3} sm={4} xs={6}>\r\n            <CharCard\r\n              id={char.id}\r\n              name={char.name}\r\n              image={char.image}\r\n              key={char.id}\r\n              handlePicked={this.handlePicked}\r\n            />\r\n            </GridMDC>\r\n          ))}\r\n        </GridMDC>\r\n        <BottomNavMDC style={{ background: \"#313133\", marginTop: \"17.5px\", paddingTop: \"15px\", borderTop: \"2.5px solid slategray\" }}>\r\n        </BottomNavMDC>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../src/index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}